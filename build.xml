<?xml version="1.0" encoding="UTF-8"?>
<project name="REXOS" default="all" basedir="">
	<property name="rexos-src-folder" value="${basedir}/src/REXOS/" />
	<property name="rexos-java-root" value="${rexos-src-folder}" />
	<property name="buildpath" value="${repo-root}/build/REXOS/" />
	<property environment="env" />
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${rexos-src-folder}/external_libraries/ant-contrib.jar" />
		</classpath>
	</taskdef>
	<!-- @Author: Lars Veenendaal -->
	<!-- Attempting to rewrite ant configuration. -->
	<!-- Because a missing feature in ant 1.8 i have to set this for all javac calls -->
	<presetdef name="rexos.javac">
		<javac includeantruntime="false">
			<classpath refid="master-classpath" />
		</javac>
	</presetdef>
	<!-- Macro for the following things:
	- load current classpath
	- echo the current building dir
	- make the bin directory
	- running javac command using the classpath
	- adding currently build source to the classpath
	-->
	<path id="master-classpath">
		<fileset dir="${rexos-src-folder}/external_libraries/">
			<include name="*.jar" />
		</fileset>
	</path>
	<target name="all" depends="MAS, HAL, generic, util,scada, generate-all" />
	<target name="MAS" depends="util, generic, HAL, scada">
		<mkdir dir="build/REXOS/MAS" />
		<rexos.javac destdir="build/REXOS">
			<src path="${rexos-src-folder}/MAS" />
		</rexos.javac>
	</target>
	<target name="HAL" depends="util, generic">
		<mkdir dir="build/REXOS/HAL" />
		<rexos.javac destdir="build/REXOS">
			<src path="${rexos-src-folder}/HAL" />
		</rexos.javac>
	</target>
	<target name="generic">
		<mkdir dir="build/REXOS/generic" />
		<rexos.javac destdir="build/REXOS">
			<src path="${rexos-src-folder}/generic" />
		</rexos.javac>
	</target>

	<target name="scada" depends="">
		<mkdir dir="build/REXOS/SCADA" />
		<rexos.javac destdir="build/REXOS">
			<src path="${rexos-src-folder}/MAS" />
			<src path="${rexos-src-folder}/SCADA" />
		</rexos.javac>
	</target>
	
	<target name="util">
		<mkdir dir="build/REXOS/util" />
		<rexos.javac destdir="build/REXOS">
			<src path="${rexos-src-folder}/util" />
		</rexos.javac>
	</target>
	<target name="MASSIM">
		<mkdir dir="simulation" />
		<rexos.javac destdir="build">
			<src path="${rexos-src-folder}/simulation" />
		</rexos.javac>
	</target>
	<target name="emurex">
		<jar destfile="simulation/simulation.jar" basedir="build/REXOS/" includes="**" excludes="**/Test.class" />
	</target>
	<target name="clean">
		<delete file="${export-classpath-file}" />
		<delete dir="build" />
	</target>
	<target name="generate-all" depends="generate-HAL, generate-module-models, generate-equiplet-models, generate-part-models, generate-nodes" />
	<target name="generate-HAL" depends="generate-HAL-modules, generate-HAL-capabilities" />
	<target name="generate-HAL-modules" depends="HAL">
		<var name="jar.basedir" value="build/REXOS/" />
		<var name="jar.targetdir" value="generatedOutput/HAL/modules/" />
		<foreach target="-generate-jar" param="theEntry" parallel="false" inheritall="true">
			<path id="modulesPathId">
				<fileset dir="build/REXOS/HAL/modules" casesensitive="yes">
					<include name="**/*.class" />
				</fileset>
			</path>
		</foreach>
	</target>
	<target name="generate-HAL-capabilities" depends="HAL">
		<var name="jar.basedir" value="build/REXOS/" />
		<var name="jar.targetdir" value="generatedOutput/HAL/capabilities/" />
		<foreach target="-generate-jar" param="theEntry" parallel="false" inheritall="true">
			<path id="capabilitiesPathId">
				<fileset dir="build/REXOS/HAL/capabilities" casesensitive="yes">
					<include name="**/*.class" />
				</fileset>
			</path>
		</foreach>
	</target>
	<target name="generate-module-models">
		<var name="zip.targetdir" value="generatedOutput/models/modules/" />
		<for param="zip.manufacturerdir">
			<path>
				<dirset dir="src/REXOS/modules" casesensitive="yes">
					<include name="**/*" />
					<exclude name="**/*/*" />
				</dirset>
			</path>
			<sequential>
				<var name="zip.offsetdir" unset="true" />
				<basename property="zip.offsetdir" file="@{zip.manufacturerdir}" />
				<for param="zip.fulldir">
					<path>
						<dirset dir="@{zip.manufacturerdir}" casesensitive="yes">
							<include name="**/*" />
							<exclude name="**/*/*" />
							<exclude name="_qrCodes" />
						</dirset>
					</path>
					<sequential>
						<var name="zip.filename" unset="true" />
						<basename property="zip.filename" file="@{zip.fulldir}" />
						<var name="zip.destfile" value="${zip.targetdir}/${zip.offsetdir}/${zip.filename}.zip" />
						<var name="zip.basedir" value="@{zip.fulldir}/_model/" />
						<antcall target="-generate-zip" inheritall="true" />
					</sequential>
				</for>
			</sequential>
		</for>
		<copy todir="generatedOutput/models/modules/_qrCodes">
			<fileset dir="src/REXOS/modules/_qrCodes" />
		</copy>
	</target>
	<target name="generate-equiplet-models">
		<var name="zip.targetdir" value="generatedOutput/models/equiplets/" />
		<for param="zip.fulldir">
			<path>
				<dirset dir="src/REXOS/equiplets" casesensitive="yes">
					<include name="**/*" />
					<exclude name="**/*/*" />
					<exclude name="_qrCodes" />
				</dirset>
			</path>
			<sequential>
				<var name="zip.filename" unset="true" />
				<basename property="zip.filename" file="@{zip.fulldir}" />
				<var name="zip.destfile" value="${zip.targetdir}/${zip.filename}.zip" />
				<var name="zip.basedir" value="@{zip.fulldir}/_model/" />
				<antcall target="-generate-zip" inheritall="true" />
			</sequential>
		</for>
	</target>
	<target name="generate-part-models">
		<var name="zip.targetdir" value="generatedOutput/models/parts/" />
		<for param="zip.fulldir">
			<path>
				<dirset dir="src/REXOS/parts" casesensitive="yes">
					<include name="**/*" />
					<exclude name="**/*/*" />
					<exclude name="_qrCodes" />
				</dirset>
			</path>
			<sequential>
				<var name="zip.filename" unset="true" />
				<basename property="zip.filename" file="@{zip.fulldir}" />
				<var name="zip.destfile" value="${zip.targetdir}/${zip.filename}.zip" />
				<var name="zip.basedir" value="@{zip.fulldir}/_model/" />
				<antcall target="-generate-zip" inheritall="true" />
			</sequential>
		</for>
		<copy todir="generatedOutput/models/parts/_qrCodes">
			<fileset dir="src/REXOS/parts/_qrCodes" />
		</copy>
	</target>
	<target name="generate-nodes">
		<var name="zip.targetdir" value="generatedOutput/nodes/" />
		<for param="zip.fulldir">
			<path>
				<dirset dir="build/REXOS/ROS/" casesensitive="yes">
					<include name="*/**" />
					<exclude name="**/*/*" />
					<exclude name="_*" />
					<exclude name="libraries" />
				</dirset>
				<dirset dir="build/REXOS/ROS/" casesensitive="yes">
					<include name="_testing" />
				</dirset>
			</path>
			<sequential>
				<var name="zip.basedir" value="build/REXOS/ROS/" />
				<var name="zip.filename" unset="true" />
				<basename property="zip.filename" file="@{zip.fulldir}" />
				<var name="zip.destfile" value="${zip.targetdir}/${zip.filename}.zip" />
				<var name="zip.basedir" value="@{zip.fulldir}" />
				<antcall target="-generate-zip" inheritall="true" />
			</sequential>
		</for>
	</target>
	<target name="-generate-zip">
		<basename property="zip.filename" file="${theEntry}" />
		<zip destfile="${zip.destfile}" basedir="${zip.basedir}" includes="**/**" />
	</target>
	<target name="-generate-jar">
		<basename property="jar.basename" file="${theEntry}" suffix=".class" />
		<jar destfile="${jar.targetdir}/${jar.basename}.jar" basedir="${jar.basedir}" includes="**/${jar.basename}.class" />
	</target>
</project>
