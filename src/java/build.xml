<project name="REXOS" default="all" basedir=".">

	<!-- java source root -->
	<property name="rexos-java-root" value="${basedir}"/>

	<!-- git repo root -->
	<property name="repo-root" value="${rexos-java-root}/../.."/>

	<!-- Specify the folder in which the binaries will be placed. -->
	<property name="buildpath" value="${repo-root}/build/java"/>

	<!-- Specify the location of the export classpath file. -->
	<property name="export-classpath-file" value="${buildpath}/.export-classpath"/>

	<!-- Macro for the following things:
	- load current classpath
	- echo the current building dir
	- make the bin directory
	- running javac command using the classpath
	- adding currently build source to the classpath
	-->
	<macrodef name="buildjava">
   		<attribute name="dir"/>
   		<sequential>
			<pathconvert property="relative.dir">
				<path location="@{dir}"/>
				<globmapper from="${rexos-java-root}/*" to="./*" />
			</pathconvert>

   			<loadfile property="classpath" srcFile="${export-classpath-file}"/>
   			<echo message="building ${relative.dir}"/>
   			<mkdir dir="${buildpath}/${relative.dir}"/>
			<javac srcdir="@{dir}" includeantruntime="true" destdir="${buildpath}/${relative.dir}" classpath="${classpath}"/> 
			<echo file="${export-classpath-file}" append="true" message=":${buildpath}/${relative.dir}"/>
		</sequential>
	</macrodef>

	<!-- Macro for the following things:
	- echo the current cleaning dir
	- deleting the bin directory
	-->
	<macrodef name="cleanjava">
   		<attribute name="dir"/>
   		<sequential>
   			<pathconvert property="relative.dir">
				<path location="@{dir}"/>
				<globmapper from="${rexos-java-root}/*" to="./*" />
			</pathconvert>
   			<echo message="${buildpath}/${relative.dir}"/>
   			<delete dir="${buildpath}/${relative.dir}"/>
		</sequential>
	</macrodef>

	<!-- reset the export file 
		TODO: Figure out why this is here.
		TODO: Find a nicer way to put the libraries in -->
	<delete file="${export-classpath-file}"/> 
	<touch file="${export-classpath-file}"/> 
	<echo file="${export-classpath-file}" append="true" message="${basedir}/libraries/mongo-2.9.3.jar:${basedir}/libraries/jade.jar:${basedir}/libraries/gson-2.2.2.jar"/>

	<!-- default target, for new targets add them in depends list
		TODO: figure out what this does -->	
	<target name="all" depends="libraries, mas, tools">
        <!-- set the total classpath to the export file--> 
    	<loadfile property="classpath" srcFile="${export-classpath-file}"/>
    	<echo file="${export-classpath-file}" append="false" message="export CLASSPATH=$CLASSPATH:${classpath}"/>
	</target>
		

	<!-- libraries target-->
	<target name="libraries">
    	<ant antfile="build.xml" target="all" dir="rexos/libraries" inheritRefs="true" useNativeBasedir="true"/>        
	</target>

	<!-- mas target-->
	<target name="mas" depends="libraries">
    	<ant antfile="build.xml" target="all" dir="rexos/mas" inheritRefs="true" useNativeBasedir="true"/> 
	</target>

	<!-- tools target-->
	<target name="tools" depends="libraries">
    	<ant antfile="build.xml" target="all" dir="tools" inheritRefs="true" useNativeBasedir="true"/>
	</target>

	<!-- clean target-->
	<target name="clean">
    	<ant antfile="build.xml" target="clean" dir="rexos/mas" inheritRefs="true" useNativeBasedir="true"/>
    	<ant antfile="build.xml" target="clean" dir="rexos/libraries" inheritRefs="true" useNativeBasedir="true"/>  
    	<ant antfile="build.xml" target="clean" dir="tools" inheritRefs="true" useNativeBasedir="true"/>  
    </target>

</project>
